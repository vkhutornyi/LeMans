{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"deploymentType":{
			"type": "string",
			"defaultValue": "DEV",
            "allowedValues": [
              "DEV",
              "TEST",
			  "PROD"
			]
		}
    },
    "variables": {
		"location": "[resourceGroup().location]",
		"functionAppName": "[toLower(concat(parameters('deploymentType'),'af',uniqueString(resourceGroup().id)))]",
        "hostingPlanName": "[variables('functionAppName')]",
        "servicebusName": "[toLower(concat(parameters('deploymentType'),'sb',uniqueString(resourceGroup().id)))]",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('servicebusName'), variables('defaultSASKeyName'))]",
        "sbVersion": "2017-04-01",
        "storageAccountName": "[toLower(concat(parameters('deploymentType'),'sa',uniqueString(resourceGroup().id)))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "keyVaultName": "[toLower(concat(parameters('deploymentType'),'kv',uniqueString(resourceGroup().id)))]",
		"workflowLoggingName": "[toLower(concat(parameters('deploymentType'),'wf','Logging'))]",
		"workflowImportManagerName": "[toLower(concat(parameters('deploymentType'),'wf','ImportManager'))]",
		"workflowImportMainName": "[toLower(concat(parameters('deploymentType'),'wf','ImportMain'))]",
		"workflowExportMainName": "[toLower(concat(parameters('deploymentType'),'wf','ExportMain'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[variables('location')]",
            "sku": {
              "name": "Y1",
              "tier": "Dynamic",
              "size": "Y1",
              "family": "Y"
            },
            "properties": {
              "computeMode": "Dynamic"
            }
        },        
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-03-01",
            "name": "[variables('functionAppName')]",
            "location": "[variables('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ],            
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 0
                }
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2021-03-01",
            "name": "[concat(variables('functionAppName'), '/Compress')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ],
            "properties": {
                "language": "CSharp",
                "isDisabled": false,
                "config": {
                    "disabled": false,
                    "bindings": [
                        {
                            "name": "req",
                            "type": "httpTrigger",
                            "direction": "in",
                            "authLevel": "function",
                            "methods": [
                                "post"
                            ]
                        },
                        {
                            "name": "$return",
                            "type": "http",
                            "direction": "out"
                        }
                    ]
                },
                "files": {
                    "run.csx": "#r \"Newtonsoft.Json\"\n\nusing System.Net;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Primitives;\nusing Newtonsoft.Json;\n\npublic static async Task<IActionResult> Run(HttpRequest req, ILogger log)\n{\n      log.LogInformation(\"C# HTTP trigger function processed a request.\");\n\n    string name = req.Query[\"name\"];\n\n    string requestBody = await new StreamReader(req.Body).ReadToEndAsync();\n    dynamic data = JsonConvert.DeserializeObject(requestBody);\n    name = name ?? data?.name;\n\n    string responseMessage = string.IsNullOrEmpty(name)\n        ? \"This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response.\"\n                : $\"Hello, {name}. This HTTP triggered function executed successfully.\";\n\n            return new OkObjectResult(responseMessage);\n}"
                }                
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2022-01-01-preview",
            "name": "[variables('servicebusName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Basic"
            },
            "properties": {
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('servicebusName'), '/RootManageSharedAccessKey')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('servicebusName'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('servicebusName'), '/exportbusinessevent')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('servicebusName'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('servicebusName'), '/exportex')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('servicebusName'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('servicebusName'), '/importbusinessevent')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('servicebusName'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('servicebusName'), '/importex')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('servicebusName'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/queues",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('servicebusName'), '/importqueue')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', variables('servicebusName'))]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "lockDuration": "PT30S",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "enableBatchedOperations": true,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "maxDeliveryCount": 10,
                "status": "Active",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
          "type": "Microsoft.Web/connections",
          "name": "[variables('servicebusName')]",
          "apiVersion": "2016-06-01",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', variables('serviceBusName'), 'RootManageSharedAccessKey')]"
          ],
          "properties": {
            "api": {
              "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('location'), 'servicebus')]"
            },
            "parameterValues": {
              "connectionString": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString]"
            }
          }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[variables('storageAccountName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/export')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/import')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('storageAccountName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('location'), 'azureblob')]"
                },
                "parameterValues": {
                    "accountName": "[variables('storageAccountName')]",
                    "accessKey": "[listKeys(variables('storageAccountId'), '2019-04-01').keys[0].value]"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-11-01-preview",
            "name": "[variables('keyVaultName')]",
            "location": "eastus",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('keyVaultName'), '/devimportexportqueue')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "apiVersion": "2017-07-01",
            "dependsOn": [],
            "location": "[variables('location')]",
            "name": "[variables('workflowLoggingName')]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "properties": {
                                        "ArrayOfLogs": {
                                            "description": "Logs as Array of JSON objects",
                                            "items": {
                                                "properties": {
                                                    "CurrentStep": {
                                                        "description": "The name of the current step above",
                                                        "title": "Current Step",
                                                        "type": "string"
                                                    },
                                                    "DateTime": {
                                                        "description": "utcNow()",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Put here some step description or actual logs",
                                                        "type": "string"
                                                    },
                                                    "FileName": {
                                                        "description": "Put here full path and name of the file for import/export",
                                                        "title": "File Name",
                                                        "type": "string"
                                                    },
                                                    "NextStep": {
                                                        "description": "The name of the next step below",
                                                        "title": "Next Step",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "DateTime",
                                                    "CurrentStep"
                                                ],
                                                "type": "object"
                                            },
                                            "title": "Logs",
                                            "type": "array"
                                        },
                                        "BusinessEventId": {
                                            "description": "Business Event Id from Azure Service Bus",
                                            "type": "string"
                                        },
                                        "ContentData": {
                                            "description": "Base64 content from Azure Service Bus",
                                            "type": "string"
                                        },
                                        "CustomErrorMessage": {
                                            "description": "Error message that will help to quickly identify what is failed. FTP, FSC, Service Bus, or just put here some text",
                                            "title": "Custom Error Message",
                                            "type": "string"
                                        },
                                        "DMFExecutionId": {
                                            "description": "Execution id from FSC system",
                                            "title": "DMF Execution Id",
                                            "type": "string"
                                        },
                                        "DataPackageURL": {
                                            "description": "URL address of the Azure Blob Storage with file and SAS",
                                            "title": "DataPackage URL",
                                            "type": "string"
                                        },
                                        "EnqueuedTimeUtc": {
                                            "description": "Date Time stamp from Azure Service Bus",
                                            "type": "string"
                                        },
                                        "LogicAppExecutionId": {
                                            "description": "Logic App Execution Id, like workflow()['run']['name']",
                                            "title": "Logic App Execution Id",
                                            "type": "string"
                                        },
                                        "LogicAppName": {
                                            "description": "Logic App Name, like workflow()['name']",
                                            "title": "Logic App Name",
                                            "type": "string"
                                        },
                                        "LogicAppRunId": {
                                            "description": "Logic App Run Id, like workflow()['run']['id']",
                                            "title": "Logic App Run Id",
                                            "type": "string"
                                        },
                                        "LogsType": {
                                            "description": "Please use only LogicAppMain or LogicAppConnector",
                                            "enum": [
                                                "D365",
                                                "ExternalSystem",
                                                "LogicAppMain",
                                                "LogicAppConnector"
                                            ],
                                            "title": "Type of Logs",
                                            "type": "string"
                                        },
                                        "MessageId": {
                                            "description": "Message Id from Azure Service Bus",
                                            "title": "Message Id",
                                            "type": "string"
                                        },
                                        "Status": {
                                            "description": "Use Warning to send an email alert, but in FSC execution status will be OK",
                                            "enum": [
                                                "Error",
                                                "Warning",
                                                "OK"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "ContentData",
                                        "BusinessEventId",
                                        "EnqueuedTimeUtc",
                                        "MessageId",
                                        "LogicAppName",
                                        "LogicAppExecutionId",
                                        "LogicAppRunId",
                                        "Status",
                                        "LogsType"
                                    ],
                                    "type": "object"
                                }
                            },
                            "operationOptions": "EnableSchemaValidation"
                        }
                    },
                    "actions": {
                        "Add_logs_to_the_FSC": {
                            "runAfter": {
                                "Init_Integration_Status": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "@body('Parse_JSON_from_ContentData')?['D365EnvironmentURL']",
                                    "clientId": "@body('Parse_JSON_from_ContentData')?['AzureApplicationId']",
                                    "secret": "@decodeBase64(body('Parse_JSON_from_ContentData')?['AzureApplicationSecret'])",
                                    "tenant": "@body('Parse_JSON_from_ContentData')?['AzureTenantId']",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": {
                                    "CustomErrorMessage": "@{triggerBody()?['CustomErrorMessage']}",
                                    "DMFDefinitionGroupName": "@{body('Parse_JSON_from_ContentData')?['DefinitionGroupName']}",
                                    "DMFExecutionId": "@{triggerBody()?['DMFExecutionId']}",
                                    "DataManagementIntegrationId": "@{body('Parse_JSON_from_ContentData')?['DataManagementIntegrationId']}",
                                    "DataManagementIntegrationUniqueId": "@{body('Parse_JSON_from_ContentData')?['DataManagementIntegrationUniqueId']}",
                                    "DataManagementLogSource": "@{triggerBody()['LogicAppName']}",
                                    "DataPackageURL": "@{triggerBody()?['DataPackageURL']}",
                                    "Direction": "@{body('Parse_JSON_from_ContentData')?['DataMigrationDirection']}",
                                    "ExternalSystem": "@{body('Parse_JSON_from_ContentData')?['ExternalSystem']}",
                                    "IntegrationStatus": "@{variables('Integration Status')}",
                                    "Log": "@{triggerBody()?['ArrayOfLogs']}",
                                    "LogicAppExecutionId": "@{triggerBody()['LogicAppExecutionId']}",
                                    "LogsType": "@{triggerBody()['LogsType']}"
                                },
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "method": "POST",
                                "uri": "@{body('Parse_JSON_from_ContentData')?['D365EnvironmentURL']}/data/DataManagementIntegrationLogs"
                            }
                        },
                        "Condition": {
                            "actions": {
                                "Compose_HTML_Email": {
                                    "runAfter": {
                                        "Compose_Logic_App_URL": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "<style>table, table th, table td {border: 2px solid red; border-collapse: collapse;padding: 5px;}tr:hover {background-color: #D6EEEE;}table th {background-color: lightgray;}</style>\n\n<p>Hi,\n\n<br /><br />Logic app <strong>@{triggerBody()['LogicAppName']}</strong> has state <span style=\"color: #d14841;\">@{variables('Integration Status')}</span> with status <span style=\"color: #ba241c;\"> @{triggerBody()['Status']}</span>.\n<br /> <br /> \n<br />Please find some details below.\n<br />\n<br /><strong>Data Package URL</strong>: @{triggerBody()?['DataPackageURL']}\n<br /><strong>DMF Execution Id</strong>: @{triggerBody()?['DMFExecutionId']}\n<br /><strong>Azure Service Bus Message Id</strong>: @{triggerBody()['MessageId']}\n<br /><strong>Azure Service Bus Enqueued time</strong>: @{triggerBody()['EnqueuedTimeUtc']}\n\n<br /> \n<br /><strong>FSC Business Event Id</strong>: @{triggerBody()['BusinessEventId']}\n<br /><strong>FSC Environment URL</strong>: @{body('Parse_JSON_from_ContentData')?['D365EnvironmentURL']}\n<br /><strong>Data Management Integration Id</strong>: @{body('Parse_JSON_from_ContentData')?['DataManagementIntegrationId']}\n<br /><strong>Data Management Integration Unque Id (Transaction Id)</strong>: @{body('Parse_JSON_from_ContentData')?['DataManagementIntegrationUniqueId']}\n<br /><strong>Data Management Direction</strong>: @{body('Parse_JSON_from_ContentData')?['DataMigrationDirection']}\n<br /><strong>DMF Definition Group</strong>: @{body('Parse_JSON_from_ContentData')?['DefinitionGroupName']}\n<br /><strong>Environment Name</strong>: @{body('Parse_JSON_from_ContentData')?['EnvironmentName']}\n<br /><strong>External System</strong>: @{body('Parse_JSON_from_ContentData')?['ExternalSystem']} (@{body('Parse_JSON_from_ContentData')?['ExternalSystemDescription']})\n<br /><strong>FSC Legal Entity</strong>: @{body('Parse_JSON_from_ContentData')?['LegalEntity']}\n<br /> \n<br /><strong>Logic App Name</strong>: @{triggerBody()['LogicAppName']}\n<br /><strong>Logic App Execution ID</strong>: @{triggerBody()['LogicAppExecutionId']}\n<br /><strong>Logic App Execution URL</strong>: <a href=\"@{outputs('Compose_Logic_App_URL')}\">@{outputs('Compose_Logic_App_URL')}</a>\n\n<br /><br /><strong>Custom Error Message:</strong> @{triggerBody()?['CustomErrorMessage']}</p>\n<br /><p>Logs</p> \n@{body('Create_HTML_table_from_Logs')}\n\n<br /><br /><br />It is recommended to open the Logic App URL (@{outputs('Compose_Logic_App_URL')}) and find more details there. However, sometimes URL is not generated well; in this case, please open Azure Portal (<a href=\"https://portal.azure.com/\">https://portal.azure.com/</a>) manually, and open Logic App (@{triggerBody()['LogicAppName']}), and search the following ID @{triggerBody()['LogicAppExecutionId']} in the execution history.</p>\n"
                                },
                                "Compose_Logic_App_URL": {
                                    "runAfter": {
                                        "Create_HTML_table_from_Logs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@concat('https://portal.azure.com/#blade/Microsoft_Azure_EMA/LogicAppsMonitorBlade/runid/',encodeUriComponent(triggerBody()['LogicAppRunId']))"
                                },
                                "Create_HTML_table_from_Logs": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "format": "HTML",
                                        "from": "@triggerBody()?['ArrayOfLogs']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Init_Integration_Status": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@triggerBody()['Status']",
                                                "OK"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Extract_Base64_ContentData": {
                            "runAfter": {
                                "Init_Alert_Email_To": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@base64ToString(triggerBody()['ContentData'])"
                        },
                        "Init_Alert_Email_From": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Alert Email From",
                                        "type": "string",
                                        "value": "support@ciellos.com"
                                    }
                                ]
                            }
                        },
                        "Init_Alert_Email_To": {
                            "runAfter": {
                                "Init_Alert_Email_From": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Alert Email To",
                                        "type": "string",
                                        "value": "valery.moskalenko@ciellos.com;valentyn.khutornyi@ciellos.com"
                                    }
                                ]
                            }
                        },
                        "Init_Integration_Status": {
                            "runAfter": {
                                "Parse_JSON_from_ContentData": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Integration Status",
                                        "type": "string",
                                        "value": "@{replace(replace(replace(triggerBody()['Status'],'OK','Sucess'),'Error','Failed'),'Warning','Sucess')}"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON_from_ContentData": {
                            "runAfter": {
                                "Extract_Base64_ContentData": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@outputs('Extract_Base64_ContentData')",
                                "schema": {
                                    "properties": {
                                        "AzureApplicationId": {
                                            "type": "string"
                                        },
                                        "AzureApplicationSecret": {
                                            "type": "string"
                                        },
                                        "AzureTenantId": {
                                            "type": "string"
                                        },
                                        "BusinessEventId": {
                                            "type": "string"
                                        },
                                        "ControlNumber": {
                                            "type": "integer"
                                        },
                                        "D365EnvironmentURL": {
                                            "type": "string"
                                        },
                                        "DataManagementIntegrationId": {
                                            "type": "string"
                                        },
                                        "DataManagementIntegrationUniqueId": {
                                            "type": "string"
                                        },
                                        "DataMigrationDirection": {
                                            "type": "string"
                                        },
                                        "DataProjectErrorPath": {
                                            "type": "string"
                                        },
                                        "DataProjectPath": {
                                            "type": "string"
                                        },
                                        "DataProjectProcessedPath": {
                                            "type": "string"
                                        },
                                        "DefinitionGroupName": {
                                            "type": "string"
                                        },
                                        "EnvironmentName": {
                                            "type": "string"
                                        },
                                        "EventId": {
                                            "type": "string"
                                        },
                                        "EventTime": {
                                            "type": "string"
                                        },
                                        "ExternalSystem": {
                                            "type": "string"
                                        },
                                        "ExternalSystemDescription": {
                                            "type": "string"
                                        },
                                        "LegalEntity": {
                                            "type": "string"
                                        },
                                        "MajorVersion": {
                                            "type": "integer"
                                        },
                                        "MinorVersion": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response_OK_ALWAYS": {
                            "runAfter": {
                                "Init_Alert_Email_To": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "Logs will be submitted in the background",
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {},
                "state": "Enabled"
            },
            "type": "Microsoft.Logic/workflows"
        },
        {
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('servicebusName'))]",
				"[resourceId('Microsoft.Logic/workflows', variables('workflowLoggingName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('workflowImportManagerName')]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(businessevents)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('importbusinessevent'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Append_to_LogMessage_1": {
                            "runAfter": {
                                "Initialize_LogMessage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToArrayVariable",
                            "inputs": {
                                "name": "LogMessage",
                                "value": {
                                    "CurrentStep": "Init all variables",
                                    "DateTime": "@{utcNow()}",
                                    "NextStep": "Send Message"
                                }
                            }
                        },
                        "Append_to_LogMessage_2": {
                            "runAfter": {
                                "Send_message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToArrayVariable",
                            "inputs": {
                                "name": "LogMessage",
                                "value": {
                                    "CurrentStep": "Send Message",
                                    "DateTime": "@{utcNow()}",
                                    "NextStep": ""
                                }
                            }
                        },
                        "DEV_Logging": {
                            "runAfter": {
                                "Append_to_LogMessage_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "ArrayOfLogs": "@variables('LogMessage')",
                                    "BusinessEventId": "@variables('BusinessEventId')",
                                    "ContentData": "@body('Parse_Message')?['ContentData']",
                                    "EnqueuedTimeUtc": "@body('Parse_Message')?['Properties']?['EnqueuedTimeUtc']",
                                    "LogicAppExecutionId": "@body('Parse_Workflow')?['run']?['name']",
                                    "LogicAppName": "@body('Parse_Workflow')?['name']",
                                    "LogicAppRunId": "@body('Parse_Workflow')?['run']?['id']",
                                    "LogsType": "LogicAppMain",
                                    "MessageId": "@triggerBody()?['MessageId']",
                                    "Status": "OK"
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', variables('workflowLoggingName'))]"
                                    }
                                }
                            }
                        },
                        "Initialize_BusinessEventId": {
                            "runAfter": {
                                "Initialize_ExternalSystem": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BusinessEventId",
                                        "type": "string",
                                        "value": "@{guid()}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Content": {
                            "runAfter": {
                                "Parse_Message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Content",
                                        "type": "string",
                                        "value": "@{base64ToString(body('Parse_Message')?['ContentData'])}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Direction": {
                            "runAfter": {
                                "Parse_ContentData": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Direction",
                                        "type": "string",
                                        "value": "@body('Parse_ContentData')?['DataMigrationDirection']"
                                    }
                                ]
                            }
                        },
                        "Initialize_ExternalSystem": {
                            "runAfter": {
                                "Initialize_Direction": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExternalSystem",
                                        "type": "string",
                                        "value": "@body('Parse_ContentData')?['ExternalSystem']"
                                    }
                                ]
                            }
                        },
                        "Initialize_LogMessage": {
                            "runAfter": {
                                "Initialize_BusinessEventId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LogMessage",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Parse_ContentData": {
                            "runAfter": {
                                "Initialize_Content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('Content')",
                                "schema": {
                                    "properties": {
                                        "AzureApplicationId": {
                                            "type": "string"
                                        },
                                        "AzureApplicationSecret": {
                                            "type": "string"
                                        },
                                        "AzureTenantId": {
                                            "type": "string"
                                        },
                                        "BusinessEventId": {
                                            "type": "string"
                                        },
                                        "ControlNumber": {
                                            "type": "integer"
                                        },
                                        "D365EnvironmentURL": {
                                            "type": "string"
                                        },
                                        "DataManagementIntegrationUniqueId": {
                                            "type": "string"
                                        },
                                        "DataMigrationDirection": {
                                            "type": "string"
                                        },
                                        "DefinitionGroupName": {
                                            "type": "string"
                                        },
                                        "EventId": {
                                            "type": "string"
                                        },
                                        "EventTime": {
                                            "type": "string"
                                        },
                                        "ExternalSystem": {
                                            "type": "string"
                                        },
                                        "LegalEntity": {
                                            "type": "string"
                                        },
                                        "MajorVersion": {
                                            "type": "integer"
                                        },
                                        "MinorVersion": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Message": {
                            "runAfter": {
                                "Parse_Workflow": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "properties": {
                                        "ContentData": {
                                            "type": "string"
                                        },
                                        "ContentTransferEncoding": {
                                            "type": "string"
                                        },
                                        "ContentType": {
                                            "type": "string"
                                        },
                                        "CorrelationId": {},
                                        "Label": {},
                                        "LockToken": {
                                            "type": "string"
                                        },
                                        "MessageId": {
                                            "type": "string"
                                        },
                                        "Properties": {
                                            "properties": {
                                                "BusinessEventCategory": {
                                                    "type": "string"
                                                },
                                                "BusinessEventId": {
                                                    "type": "string"
                                                },
                                                "DeliveryCount": {
                                                    "type": "string"
                                                },
                                                "EnqueuedSequenceNumber": {
                                                    "type": "string"
                                                },
                                                "EnqueuedTimeUtc": {
                                                    "type": "string"
                                                },
                                                "EventId": {
                                                    "type": "string"
                                                },
                                                "ExpiresAtUtc": {
                                                    "type": "string"
                                                },
                                                "LegalEntity": {
                                                    "type": "string"
                                                },
                                                "LockToken": {
                                                    "type": "string"
                                                },
                                                "LockedUntilUtc": {
                                                    "type": "string"
                                                },
                                                "MessageId": {
                                                    "type": "string"
                                                },
                                                "ScheduledEnqueueTimeUtc": {
                                                    "type": "string"
                                                },
                                                "SequenceNumber": {
                                                    "type": "string"
                                                },
                                                "Size": {
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "type": "string"
                                                },
                                                "TimeToLive": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "ReplyTo": {},
                                        "ReplyToSessionId": {},
                                        "ScheduledEnqueueTimeUtc": {
                                            "type": "string"
                                        },
                                        "SequenceNumber": {
                                            "type": "integer"
                                        },
                                        "SessionId": {},
                                        "TimeToLive": {
                                            "type": "string"
                                        },
                                        "To": {}
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Workflow": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@workflow()",
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "run": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "tags": {
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Send_message": {
                            "runAfter": {
                                "Append_to_LogMessage_1": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{triggerBody()?['ContentData']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent(encodeURIComponent(concat(variables('Direction'),variables('ExternalSystem'))))}/messages",
                                "queries": {
                                    "systemProperties": "None"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('servicebusName'))]",
                                "connectionName": "[variables('servicebusName')]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('location'), 'servicebus')]"
                            }
                        }
                    }
                },
                "state": "Enabled"
            },
            "type": "Microsoft.Logic/workflows"
        },
        {
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('servicebusName'))]",
				"[resourceId('Microsoft.Logic/workflows', variables('workflowLoggingName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('workflowImportMainName')]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(businessevents)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('importqueue'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Append_to_LogMessage_1": {
                            "runAfter": {
                                "Initialize_LogMessage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToArrayVariable",
                            "inputs": {
                                "name": "LogMessage",
                                "value": {
                                    "CurrentStep": "Init all variables",
                                    "DateTime": "@{utcNow()}",
                                    "NextStep": "Import job"
                                }
                            }
                        },
                        "DEV_Logging": {
                            "runAfter": {
                                "Import_job": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "ArrayOfLogs": "@variables('LogMessage')",
                                    "BusinessEventId": "@variables('BusinessEventId')",
                                    "ContentData": "@body('Parse_Message')?['ContentData']",
                                    "CustomErrorMessage": "@variables('ErrorMessage')",
                                    "DataPackageURL": "@variables('FileUrl')",
                                    "EnqueuedTimeUtc": "@body('Parse_Message')?['Properties']?['EnqueuedTimeUtc']",
                                    "LogicAppExecutionId": "@body('Parse_Workflow')?['run']?['name']",
                                    "LogicAppName": "@body('Parse_Workflow')?['name']",
                                    "LogicAppRunId": "@body('Parse_Workflow')?['run']?['id']",
                                    "LogsType": "LogicAppMain",
                                    "MessageId": "@triggerBody()?['MessageId']",
                                    "Status": "@variables('Status')"
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', variables('workflowLoggingName'))]"
                                    }
                                }
                            }
                        },
                        "Import_job": {
                            "actions": {
                                "Append_to_LogMessage_2": {
                                    "runAfter": {
                                        "Set_variable_Status": [
                                            "Succeeded",
                                            "Skipped"
                                        ],
                                        "Set_variable_Status_1": [
                                            "Succeeded",
                                            "Skipped"
                                        ],
                                        "Set_variable_Status_2": [
                                            "Succeeded",
                                            "Skipped"
                                        ],
                                        "Set_variable_Status_3": [
                                            "Succeeded",
                                            "Skipped"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "LogMessage",
                                        "value": {
                                            "CurrentStep": "Import job",
                                            "DateTime": "@{utcNow()}​",
                                            "NextStep": ""
                                        }
                                    }
                                },
                                "Get_Azure_Write_URL": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "@variables('Audience')",
                                            "clientId": "@variables('ClientId')",
                                            "secret": "@variables('ClientSecret')",
                                            "tenant": "@variables('TenantId')",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "uniqueFileName": "@{variables('PackageName')}"
                                        },
                                        "method": "POST",
                                        "uri": "@{concat(variables('BaseURL'),'.GetAzureWriteUrl')}"
                                    }
                                },
                                "Get_Package_File_from_external_source": {
                                    "runAfter": {
                                        "Parse_Value_Write_URL_response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@variables('FileUrl')"
                                    }
                                },
                                "Import_Package": {
                                    "runAfter": {
                                        "Put_Package_File": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "@variables('Audience')",
                                            "clientId": "@variables('ClientId')",
                                            "secret": "@variables('ClientSecret')",
                                            "tenant": "@variables('TenantId')",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "definitionGroupId": "@{variables('DefenitionGroupId')}",
                                            "execute": true,
                                            "executionId": "",
                                            "legalEntityId": "@{variables('LegalEntityId')}",
                                            "overwrite": true,
                                            "packageUrl": "@{body('Parse_Value_Write_URL_response')?['BlobUrl']}"
                                        },
                                        "method": "POST",
                                        "uri": "@{concat(variables('BaseURL'),'.ImportFromPackage')}"
                                    }
                                },
                                "Parse_Get_Azure_Write_URL_response": {
                                    "runAfter": {
                                        "Get_Azure_Write_URL": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_Azure_Write_URL')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_Get_Blob_Header": {
                                    "runAfter": {
                                        "Get_Package_File_from_external_source": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@outputs('Get_Package_File_from_external_source')['headers']",
                                        "schema": {
                                            "properties": {
                                                "Accept-Ranges": {
                                                    "type": "string"
                                                },
                                                "Content-Length": {
                                                    "type": "string"
                                                },
                                                "Content-Type": {
                                                    "type": "string"
                                                },
                                                "Date": {
                                                    "type": "string"
                                                },
                                                "ETag": {
                                                    "type": "string"
                                                },
                                                "Last-Modified": {
                                                    "type": "string"
                                                },
                                                "Server": {
                                                    "type": "string"
                                                },
                                                "x-ms-blob-type": {
                                                    "type": "string"
                                                },
                                                "x-ms-creation-time": {
                                                    "type": "string"
                                                },
                                                "x-ms-lease-state": {
                                                    "type": "string"
                                                },
                                                "x-ms-lease-status": {
                                                    "type": "string"
                                                },
                                                "x-ms-request-id": {
                                                    "type": "string"
                                                },
                                                "x-ms-server-encrypted": {
                                                    "type": "string"
                                                },
                                                "x-ms-version": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "Get_Azure_Write_URL": [
                                            "TimedOut",
                                            "Failed"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@actions('Get_Azure_Write_URL')",
                                        "schema": {
                                            "properties": {
                                                "clientTrackingId": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inputs": {
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "audience": {
                                                                    "type": "string"
                                                                },
                                                                "clientId": {
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "type": "string"
                                                                },
                                                                "tenant": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "definitionGroupId": {
                                                                    "type": "string"
                                                                },
                                                                "executionId": {
                                                                    "type": "string"
                                                                },
                                                                "legalEntityId": {
                                                                    "type": "string"
                                                                },
                                                                "packageName": {
                                                                    "type": "string"
                                                                },
                                                                "reExecute": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "uri": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "retryHistory": {
                                                    "items": {
                                                        "properties": {
                                                            "clientRequestId": {
                                                                "type": "string"
                                                            },
                                                            "code": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "properties": {
                                                                    "error": {
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "string"
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "startTime": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "startTime",
                                                            "endTime",
                                                            "code",
                                                            "clientRequestId",
                                                            "error"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "startTime": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "trackingId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_JSON_2": {
                                    "runAfter": {
                                        "Get_Package_File_from_external_source": [
                                            "Failed",
                                            "TimedOut"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@actions('Get_Package_File_from_external_source')",
                                        "schema": {
                                            "properties": {
                                                "clientTrackingId": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inputs": {
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "audience": {
                                                                    "type": "string"
                                                                },
                                                                "clientId": {
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "type": "string"
                                                                },
                                                                "tenant": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "definitionGroupId": {
                                                                    "type": "string"
                                                                },
                                                                "executionId": {
                                                                    "type": "string"
                                                                },
                                                                "legalEntityId": {
                                                                    "type": "string"
                                                                },
                                                                "packageName": {
                                                                    "type": "string"
                                                                },
                                                                "reExecute": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "uri": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "retryHistory": {
                                                    "items": {
                                                        "properties": {
                                                            "clientRequestId": {
                                                                "type": "string"
                                                            },
                                                            "code": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "properties": {
                                                                    "error": {
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "string"
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "startTime": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "startTime",
                                                            "endTime",
                                                            "code",
                                                            "clientRequestId",
                                                            "error"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "startTime": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "trackingId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_JSON_3": {
                                    "runAfter": {
                                        "Import_Package": [
                                            "Failed",
                                            "TimedOut"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@actions('Import_Package')",
                                        "schema": {
                                            "properties": {
                                                "clientTrackingId": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inputs": {
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "audience": {
                                                                    "type": "string"
                                                                },
                                                                "clientId": {
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "type": "string"
                                                                },
                                                                "tenant": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "definitionGroupId": {
                                                                    "type": "string"
                                                                },
                                                                "executionId": {
                                                                    "type": "string"
                                                                },
                                                                "legalEntityId": {
                                                                    "type": "string"
                                                                },
                                                                "packageName": {
                                                                    "type": "string"
                                                                },
                                                                "reExecute": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "uri": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "retryHistory": {
                                                    "items": {
                                                        "properties": {
                                                            "clientRequestId": {
                                                                "type": "string"
                                                            },
                                                            "code": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "properties": {
                                                                    "error": {
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "string"
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "startTime": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "startTime",
                                                            "endTime",
                                                            "code",
                                                            "clientRequestId",
                                                            "error"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "startTime": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "trackingId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_Value_Write_URL_response": {
                                    "runAfter": {
                                        "Parse_Get_Azure_Write_URL_response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@replace(body('Parse_Get_Azure_Write_URL_response')?['value'],'\\','')",
                                        "schema": {
                                            "properties": {
                                                "BlobId": {
                                                    "type": "string"
                                                },
                                                "BlobUrl": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Put_Package_File": {
                                    "runAfter": {
                                        "Parse_Get_Blob_Header": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Get_Package_File_from_external_source')",
                                        "headers": {
                                            "Content-Length": "@body('Parse_Get_Blob_Header')?['Content-Length']",
                                            "Content-Type": "@body('Parse_Get_Blob_Header')?['Content-Type']",
                                            "x-ms-blob-type": "@body('Parse_Get_Blob_Header')?['x-ms-blob-type']",
                                            "x-ms-date": "@{utcNow()}",
                                            "x-ms-version": "@body('Parse_Get_Blob_Header')?['x-ms-version']"
                                        },
                                        "method": "PUT",
                                        "uri": "@body('Parse_Value_Write_URL_response')?['BlobUrl']"
                                    }
                                },
                                "Set_variable_Message_1": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ErrorMessage",
                                        "value": "@body('Parse_JSON')?['error']?['message']"
                                    }
                                },
                                "Set_variable_Message_2": {
                                    "runAfter": {
                                        "Parse_JSON_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ErrorMessage",
                                        "value": "@body('Parse_JSON_2')?['error']?['message']"
                                    }
                                },
                                "Set_variable_Message_3": {
                                    "runAfter": {
                                        "Parse_JSON_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ErrorMessage",
                                        "value": "@body('Parse_JSON_3')?['error']?['message']"
                                    }
                                },
                                "Set_variable_Status": {
                                    "runAfter": {
                                        "Import_Package": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Status",
                                        "value": "OK"
                                    }
                                },
                                "Set_variable_Status_1": {
                                    "runAfter": {
                                        "Set_variable_Message_1": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Status",
                                        "value": "Error"
                                    }
                                },
                                "Set_variable_Status_2": {
                                    "runAfter": {
                                        "Set_variable_Message_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Status",
                                        "value": "Error"
                                    }
                                },
                                "Set_variable_Status_3": {
                                    "runAfter": {
                                        "Set_variable_Message_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Status",
                                        "value": "Error"
                                    }
                                }
                            },
                            "runAfter": {
                                "Append_to_LogMessage_1": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Initialize_Audience": {
                            "runAfter": {
                                "Initialize_BaseURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Audience",
                                        "type": "string",
                                        "value": "@{concat(body('Parse_Content')?['D365EnvironmentURL'],'/')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_BaseURL": {
                            "runAfter": {
                                "Initialize_TenantId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BaseURL",
                                        "type": "string",
                                        "value": "@{concat(body('Parse_Content')?['D365EnvironmentURL'],'/data/DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_BusinessEventId": {
                            "runAfter": {
                                "Initialize_ExecutionStatus": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BusinessEventId",
                                        "type": "string",
                                        "value": "@{guid()}"
                                    }
                                ]
                            }
                        },
                        "Initialize_ClientId": {
                            "runAfter": {
                                "Initialize_Audience": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ClientId",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['AzureApplicationId']"
                                    }
                                ]
                            }
                        },
                        "Initialize_ClientSecret": {
                            "runAfter": {
                                "Initialize_ClientId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ClientSecret",
                                        "type": "string",
                                        "value": "@{base64ToString(body('Parse_Content')?['AzureApplicationSecret'])}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Content": {
                            "runAfter": {
                                "Parse_Message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Content",
                                        "type": "string",
                                        "value": "@{base64ToString(body('Parse_Message')?['ContentData'])}"
                                    }
                                ]
                            }
                        },
                        "Initialize_DefenitionGroupId": {
                            "runAfter": {
                                "Initialize_LegalEntity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DefenitionGroupId",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['DefinitionGroupName']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Direction": {
                            "runAfter": {
                                "Parse_Content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Direction",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['DataMigrationDirection']"
                                    }
                                ]
                            }
                        },
                        "Initialize_ErrorMessage": {
                            "runAfter": {
                                "Initialize_FileUrl": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ErrorMessage",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_ExecutionId": {
                            "runAfter": {
                                "Initialize_PackageName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExecutionId",
                                        "type": "string",
                                        "value": "@{guid()}"
                                    }
                                ]
                            }
                        },
                        "Initialize_ExecutionStatus": {
                            "runAfter": {
                                "Initialize_ExecutionId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExecutionStatus",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_ExternalSystem": {
                            "runAfter": {
                                "Initialize_Direction": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExternalSystem",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['ExternalSystem']"
                                    }
                                ]
                            }
                        },
                        "Initialize_FileUrl": {
                            "runAfter": {
                                "Initialize_BusinessEventId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FileUrl",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['FileUrl']"
                                    }
                                ]
                            }
                        },
                        "Initialize_LegalEntity": {
                            "runAfter": {
                                "Initialize_ClientSecret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LegalEntityId",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['LegalEntity']"
                                    }
                                ]
                            }
                        },
                        "Initialize_LogMessage": {
                            "runAfter": {
                                "Initialize_Status": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LogMessage",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_PackageName": {
                            "runAfter": {
                                "Initialize_DefenitionGroupId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PackageName",
                                        "type": "string",
                                        "value": "@{concat(variables('runId'),'.zip')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_SessionId": {
                            "runAfter": {
                                "Initialize_ExternalSystem": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SessionId",
                                        "type": "string",
                                        "value": "@{body('Parse_Message')?['SessionId']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Status": {
                            "runAfter": {
                                "Initialize_ErrorMessage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Status",
                                        "type": "string",
                                        "value": "OK"
                                    }
                                ]
                            }
                        },
                        "Initialize_TenantId": {
                            "runAfter": {
                                "Initialize_SessionId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TenantId",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['AzureTenantId']"
                                    }
                                ]
                            }
                        },
                        "Initialize_runId": {
                            "runAfter": {
                                "Parse_Workflow": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "runId",
                                        "type": "string",
                                        "value": "@body('Parse_Workflow')?['run']?['name']"
                                    }
                                ]
                            }
                        },
                        "Parse_Content": {
                            "runAfter": {
                                "Initialize_Content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@variables('Content')",
                                "schema": {
                                    "properties": {
                                        "AzureApplicationId": {
                                            "type": "string"
                                        },
                                        "AzureApplicationSecret": {
                                            "type": "string"
                                        },
                                        "AzureTenantId": {
                                            "type": "string"
                                        },
                                        "BusinessEventId": {
                                            "type": "string"
                                        },
                                        "ControlNumber": {
                                            "type": "integer"
                                        },
                                        "D365EnvironmentURL": {
                                            "type": "string"
                                        },
                                        "DataManagementIntegrationId": {
                                            "type": "string"
                                        },
                                        "DataManagementIntegrationUniqueId": {
                                            "type": "string"
                                        },
                                        "DataMigrationDirection": {
                                            "type": "string"
                                        },
                                        "DataProjectErrorPath": {
                                            "type": "string"
                                        },
                                        "DataProjectPath": {
                                            "type": "string"
                                        },
                                        "DataProjectProcessedPath": {
                                            "type": "string"
                                        },
                                        "DefinitionGroupName": {
                                            "type": "string"
                                        },
                                        "EnvironmentName": {
                                            "type": "string"
                                        },
                                        "EventId": {
                                            "type": "string"
                                        },
                                        "EventTime": {
                                            "type": "string"
                                        },
                                        "ExternalSystem": {
                                            "type": "string"
                                        },
                                        "ExternalSystemDescription": {
                                            "type": "string"
                                        },
                                        "FileUrl": {
                                            "type": "string"
                                        },
                                        "LegalEntity": {
                                            "type": "string"
                                        },
                                        "MajorVersion": {
                                            "type": "integer"
                                        },
                                        "MinorVersion": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Message": {
                            "runAfter": {
                                "Initialize_runId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "properties": {
                                        "ContentData": {
                                            "type": "string"
                                        },
                                        "ContentTransferEncoding": {
                                            "type": "string"
                                        },
                                        "ContentType": {
                                            "type": "string"
                                        },
                                        "CorrelationId": {},
                                        "Label": {},
                                        "LockToken": {
                                            "type": "string"
                                        },
                                        "MessageId": {
                                            "type": "string"
                                        },
                                        "Properties": {
                                            "properties": {
                                                "BusinessEventCategory": {
                                                    "type": "string"
                                                },
                                                "BusinessEventId": {
                                                    "type": "string"
                                                },
                                                "DeliveryCount": {
                                                    "type": "string"
                                                },
                                                "EnqueuedSequenceNumber": {
                                                    "type": "string"
                                                },
                                                "EnqueuedTimeUtc": {
                                                    "type": "string"
                                                },
                                                "EventId": {
                                                    "type": "string"
                                                },
                                                "ExpiresAtUtc": {
                                                    "type": "string"
                                                },
                                                "LegalEntity": {
                                                    "type": "string"
                                                },
                                                "LockToken": {
                                                    "type": "string"
                                                },
                                                "LockedUntilUtc": {
                                                    "type": "string"
                                                },
                                                "MessageId": {
                                                    "type": "string"
                                                },
                                                "ScheduledEnqueueTimeUtc": {
                                                    "type": "string"
                                                },
                                                "SequenceNumber": {
                                                    "type": "string"
                                                },
                                                "Size": {
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "type": "string"
                                                },
                                                "TimeToLive": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "ReplyTo": {},
                                        "ReplyToSessionId": {},
                                        "ScheduledEnqueueTimeUtc": {
                                            "type": "string"
                                        },
                                        "SequenceNumber": {
                                            "type": "integer"
                                        },
                                        "SessionId": {},
                                        "TimeToLive": {
                                            "type": "string"
                                        },
                                        "To": {}
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Workflow": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@workflow()",
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "run": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "tags": {
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('servicebusName'))]",
                                "connectionName": "[parameters('servicebusName')]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('location'), 'servicebus')]"
                            }
                        }
                    }
                },
                "state": "Enabled"
            },
            "type": "Microsoft.Logic/workflows"
        },
        {
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('servicebusName'))]",
                "[resourceId('Microsoft.Web/connections', variables('storageAccountName'))]",
				"[resourceId('Microsoft.Logic/workflows', variables('workflowLoggingName'))]"
            ],
            "location":  "[variables('location')]",
            "name": "[variables('workflowExportMainName')]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_queue_(businessevents)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('exportbusinessevent'))}/messages/head",
                                "queries": {
                                    "queueType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Append_to_LogMessage_1": {
                            "runAfter": {
                                "Initialize_LogMessage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToArrayVariable",
                            "inputs": {
                                "name": "LogMessage",
                                "value": {
                                    "CurrentStep": "Init all variables",
                                    "DateTime": "@{utcNow()}",
                                    "NextStep": "Export Job"
                                }
                            }
                        },
                        "Condition": {
                            "actions": {},
                            "runAfter": {
                                "Export_job": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Append_to_LogMessage_3": {
                                        "runAfter": {
                                            "Send_message": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                            "name": "LogMessage",
                                            "value": {
                                                "CurrentStep": "Send Message",
                                                "DateTime": "@{utcNow()}",
                                                "NextStep": ""
                                            }
                                        }
                                    },
                                    "Parse_FileMessage": {
                                        "runAfter": {},
                                        "type": "ParseJson",
                                        "inputs": {
                                            "content": {
                                                "file": "@{variables('PackageName')}",
                                                "fileurl": "@{body('Create_SAS_URI_by_path_(V2)')?['WebUrl']}"
                                            },
                                            "schema": {
                                                "properties": {
                                                    "file": {
                                                        "type": "string"
                                                    },
                                                    "fileurl": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "Send_message": {
                                        "runAfter": {
                                            "Set_FileMessage": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "ContentData": "@{base64(union(variables('Content'),variables('FileMessage')))}",
                                                "SessionId": "@variables('SessionId')"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/@{encodeURIComponent(encodeURIComponent(concat('export',variables('ExternalSystem'))))}/messages"
                                        }
                                    },
                                    "Set_FileMessage": {
                                        "runAfter": {
                                            "Parse_FileMessage": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "FileMessage",
                                            "value": "@body('Parse_FileMessage')"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('Status')",
                                            "Error"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "DEV_Logging": {
                            "runAfter": {
                                "Condition": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "ArrayOfLogs": "@variables('LogMessage')",
                                    "BusinessEventId": "@body('Parse_Content')?['BusinessEventId']",
                                    "ContentData": "@body('Parse_Message')?['ContentData']",
                                    "EnqueuedTimeUtc": "@body('Parse_Message')?['Properties']?['EnqueuedTimeUtc']",
                                    "LogicAppExecutionId": "@body('Parse_Workflow')?['run']?['name']",
                                    "LogicAppName": "@body('Parse_Workflow')?['name']",
                                    "LogicAppRunId": "@body('Parse_Workflow')?['run']?['id']",
                                    "LogsType": "LogicAppMain",
                                    "MessageId": "@triggerBody()?['MessageId']",
                                    "Status": "@variables('Status')"
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', variables('workflowLoggingName'))]"
                                    }
                                }
                            }
                        },
                        "Export_job": {
                            "actions": {
                                "Append_to_LogMessage_2": {
                                    "runAfter": {
                                        "Create_SAS_URI_by_path_(V2)": [
                                            "Succeeded",
                                            "Skipped"
                                        ],
                                        "Set_variable_Status_1": [
                                            "Succeeded",
                                            "Skipped"
                                        ],
                                        "Set_variable_Status_2": [
                                            "Succeeded",
                                            "Skipped"
                                        ],
                                        "Set_variable_Status_3": [
                                            "Succeeded",
                                            "Skipped"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "LogMessage",
                                        "value": {
                                            "CurrentStep": "Export Job",
                                            "DateTime": "@{utcNow()}",
                                            "NextStep": "Send Message"
                                        }
                                    }
                                },
                                "Create_SAS_URI_by_path_(V2)": {
                                    "runAfter": {
                                        "Create_blob_(V2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Permissions": "Read"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/datasets/@{encodeURIComponent('AccountNameFromSettings')}/CreateSharedLinkByPath",
                                        "queries": {
                                            "path": "@body('Create_blob_(V2)')?['Path']"
                                        }
                                    }
                                },
                                "Create_blob_(V2)": {
                                    "runAfter": {
                                        "Get_Package_File": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Get_Package_File')",
                                        "headers": {
                                            "ReadFileMetadataFromServer": true
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                        "queries": {
                                            "folderPath": "@{concat('/export/',variables('ExternalSystem'))}",
                                            "name": "@variables('PackageName')",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Export_to_Package": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "@variables('Audience')",
                                            "clientId": "@variables('ClientId')",
                                            "secret": "@variables('ClientSecret')",
                                            "tenant": "@variables('TenantId')",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "definitionGroupId": "@{variables('DefenitionGroupId')}",
                                            "executionId": "",
                                            "legalEntityId": "@{variables('LegalEntityId')}",
                                            "packageName": "@{variables('PackageName')}",
                                            "reExecute": false
                                        },
                                        "method": "POST",
                                        "uri": "@{concat(variables('BaseURL'),'.ExportToPackage')}"
                                    }
                                },
                                "Get_Exported_Package_URL": {
                                    "runAfter": {
                                        "Until_Get_execution_Summary_Status": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "@variables('Audience')",
                                            "clientId": "@variables('ClientId')",
                                            "secret": "@variables('ClientSecret')",
                                            "tenant": "@variables('TenantId')",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "body": {
                                            "executionId": "@{body('Parse_Export_to_Package_response')?['value']}"
                                        },
                                        "method": "POST",
                                        "uri": "@{concat(variables('BaseURL'),'.GetExportedPackageUrl')}"
                                    }
                                },
                                "Get_Package_File": {
                                    "runAfter": {
                                        "Parse_Get_Exported_Package_URL_response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@body('Parse_Get_Exported_Package_URL_response')?['value']"
                                    }
                                },
                                "Parse_Export_to_Package_response": {
                                    "runAfter": {
                                        "Export_to_Package": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Export_to_Package')",
                                        "schema": {
                                            "properties": {
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_Get_Exported_Package_URL_response": {
                                    "runAfter": {
                                        "Get_Exported_Package_URL": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_Exported_Package_URL')",
                                        "schema": {
                                            "properties": {
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_JSON_1": {
                                    "runAfter": {
                                        "Export_to_Package": [
                                            "TimedOut",
                                            "Failed"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@actions('Export_to_Package')",
                                        "schema": {
                                            "properties": {
                                                "clientTrackingId": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inputs": {
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "audience": {
                                                                    "type": "string"
                                                                },
                                                                "clientId": {
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "type": "string"
                                                                },
                                                                "tenant": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "definitionGroupId": {
                                                                    "type": "string"
                                                                },
                                                                "executionId": {
                                                                    "type": "string"
                                                                },
                                                                "legalEntityId": {
                                                                    "type": "string"
                                                                },
                                                                "packageName": {
                                                                    "type": "string"
                                                                },
                                                                "reExecute": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "uri": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "retryHistory": {
                                                    "items": {
                                                        "properties": {
                                                            "clientRequestId": {
                                                                "type": "string"
                                                            },
                                                            "code": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "properties": {
                                                                    "error": {
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "string"
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "startTime": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "startTime",
                                                            "endTime",
                                                            "code",
                                                            "clientRequestId",
                                                            "error"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "startTime": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "trackingId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_JSON_2": {
                                    "runAfter": {
                                        "Get_Exported_Package_URL": [
                                            "Failed",
                                            "TimedOut"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@actions('Get_Exported_Package_URL')",
                                        "schema": {
                                            "properties": {
                                                "clientTrackingId": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inputs": {
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "audience": {
                                                                    "type": "string"
                                                                },
                                                                "clientId": {
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "type": "string"
                                                                },
                                                                "tenant": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "definitionGroupId": {
                                                                    "type": "string"
                                                                },
                                                                "executionId": {
                                                                    "type": "string"
                                                                },
                                                                "legalEntityId": {
                                                                    "type": "string"
                                                                },
                                                                "packageName": {
                                                                    "type": "string"
                                                                },
                                                                "reExecute": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "uri": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "retryHistory": {
                                                    "items": {
                                                        "properties": {
                                                            "clientRequestId": {
                                                                "type": "string"
                                                            },
                                                            "code": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "properties": {
                                                                    "error": {
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "string"
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "startTime": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "startTime",
                                                            "endTime",
                                                            "code",
                                                            "clientRequestId",
                                                            "error"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "startTime": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "trackingId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Parse_JSON_3": {
                                    "runAfter": {
                                        "Get_Package_File": [
                                            "TimedOut",
                                            "Failed"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@actions('Get_Package_File')",
                                        "schema": {
                                            "properties": {
                                                "clientTrackingId": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "string"
                                                },
                                                "endTime": {
                                                    "type": "string"
                                                },
                                                "error": {
                                                    "properties": {
                                                        "code": {
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "inputs": {
                                                    "properties": {
                                                        "authentication": {
                                                            "properties": {
                                                                "audience": {
                                                                    "type": "string"
                                                                },
                                                                "clientId": {
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "type": "string"
                                                                },
                                                                "tenant": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "definitionGroupId": {
                                                                    "type": "string"
                                                                },
                                                                "executionId": {
                                                                    "type": "string"
                                                                },
                                                                "legalEntityId": {
                                                                    "type": "string"
                                                                },
                                                                "packageName": {
                                                                    "type": "string"
                                                                },
                                                                "reExecute": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "uri": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "retryHistory": {
                                                    "items": {
                                                        "properties": {
                                                            "clientRequestId": {
                                                                "type": "string"
                                                            },
                                                            "code": {
                                                                "type": "string"
                                                            },
                                                            "endTime": {
                                                                "type": "string"
                                                            },
                                                            "error": {
                                                                "properties": {
                                                                    "error": {
                                                                        "properties": {
                                                                            "code": {
                                                                                "type": "string"
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "startTime": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "startTime",
                                                            "endTime",
                                                            "code",
                                                            "clientRequestId",
                                                            "error"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "startTime": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "trackingId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Set_variable_Message_1": {
                                    "runAfter": {
                                        "Parse_JSON_1": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ErrorMessage",
                                        "value": "@body('Parse_JSON_1')?['error']?['message']"
                                    }
                                },
                                "Set_variable_Message_2": {
                                    "runAfter": {
                                        "Parse_JSON_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ErrorMessage",
                                        "value": "@body('Parse_JSON_2')?['error']?['message']"
                                    }
                                },
                                "Set_variable_Message_3": {
                                    "runAfter": {
                                        "Parse_JSON_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "ErrorMessage",
                                        "value": "@body('Parse_JSON_3')?['error']?['message']"
                                    }
                                },
                                "Set_variable_Status_1": {
                                    "runAfter": {
                                        "Set_variable_Message_1": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Status",
                                        "value": "Error"
                                    }
                                },
                                "Set_variable_Status_2": {
                                    "runAfter": {
                                        "Set_variable_Message_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Status",
                                        "value": "Error"
                                    }
                                },
                                "Set_variable_Status_3": {
                                    "runAfter": {
                                        "Set_variable_Message_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Status",
                                        "value": "Error"
                                    }
                                },
                                "Until_Get_execution_Summary_Status": {
                                    "actions": {
                                        "Delay_10_sec": {
                                            "runAfter": {},
                                            "type": "Wait",
                                            "inputs": {
                                                "interval": {
                                                    "count": 10,
                                                    "unit": "Second"
                                                }
                                            }
                                        },
                                        "Get_Execution_Summary_Status": {
                                            "runAfter": {
                                                "Delay_10_sec": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "@variables('Audience')",
                                                    "clientId": "@variables('ClientId')",
                                                    "secret": "@variables('ClientSecret')",
                                                    "tenant": "@variables('TenantId')",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "body": {
                                                    "executionId": "@{body('Parse_Export_to_Package_response')?['value']}"
                                                },
                                                "method": "POST",
                                                "uri": "@{concat(variables('BaseURL'),'.GetExecutionSummaryStatus')}"
                                            }
                                        },
                                        "Parse_Get_Execution_Summary_Status_response": {
                                            "runAfter": {
                                                "Get_Execution_Summary_Status": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_Execution_Summary_Status')",
                                                "schema": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Set_ExecutionStatus": {
                                            "runAfter": {
                                                "Parse_Get_Execution_Summary_Status_response": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "ExecutionStatus",
                                                "value": "@body('Parse_Get_Execution_Summary_Status_response')?['value']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_Export_to_Package_response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": "@equals(variables('ExecutionStatus'), 'Succeeded')",
                                    "limit": {
                                        "count": 20,
                                        "timeout": "PT5M"
                                    },
                                    "type": "Until"
                                }
                            },
                            "runAfter": {
                                "Append_to_LogMessage_1": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Initialize_Audience": {
                            "runAfter": {
                                "Initialize_BaseURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Audience",
                                        "type": "string",
                                        "value": "@{concat(body('Parse_Content')?['D365EnvironmentURL'],'/')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_BaseURL": {
                            "runAfter": {
                                "Initialize_TenantId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BaseURL",
                                        "type": "string",
                                        "value": "@{concat(body('Parse_Content')?['D365EnvironmentURL'],'/data/DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_ClientId": {
                            "runAfter": {
                                "Initialize_Audience": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ClientId",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['AzureApplicationId']"
                                    }
                                ]
                            }
                        },
                        "Initialize_ClientSecret": {
                            "runAfter": {
                                "Initialize_ClientId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ClientSecret",
                                        "type": "string",
                                        "value": "@{base64ToString(body('Parse_Content')?['AzureApplicationSecret'])}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Content": {
                            "runAfter": {
                                "Parse_Content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Content",
                                        "type": "object",
                                        "value": "@body('Parse_Content')"
                                    }
                                ]
                            }
                        },
                        "Initialize_DefenitionGroupId": {
                            "runAfter": {
                                "Initialize_LegalEntity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DefenitionGroupId",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['DefinitionGroupName']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Direction": {
                            "runAfter": {
                                "Initialize_FileMessage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Direction",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['DataMigrationDirection']"
                                    }
                                ]
                            }
                        },
                        "Initialize_ErrorMessage": {
                            "runAfter": {
                                "Initialize_ExecutionStatus": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ErrorMessage",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_ExecutionId": {
                            "runAfter": {
                                "Initialize_PackageName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExecutionId",
                                        "type": "string",
                                        "value": "@{guid()}"
                                    }
                                ]
                            }
                        },
                        "Initialize_ExecutionStatus": {
                            "runAfter": {
                                "Initialize_ExecutionId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExecutionStatus",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_ExternalSystem": {
                            "runAfter": {
                                "Initialize_Direction": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ExternalSystem",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['ExternalSystem']"
                                    }
                                ]
                            }
                        },
                        "Initialize_FileMessage": {
                            "runAfter": {
                                "Initialize_Content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FileMessage",
                                        "type": "object"
                                    }
                                ]
                            }
                        },
                        "Initialize_LegalEntity": {
                            "runAfter": {
                                "Initialize_ClientSecret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LegalEntityId",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['LegalEntity']"
                                    }
                                ]
                            }
                        },
                        "Initialize_LogMessage": {
                            "runAfter": {
                                "Initialize_Status": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LogMessage",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_PackageName": {
                            "runAfter": {
                                "Initialize_DefenitionGroupId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PackageName",
                                        "type": "string",
                                        "value": "@{concat(variables('runId'),'.zip')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_SessionId": {
                            "runAfter": {
                                "Initialize_ExternalSystem": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SessionId",
                                        "type": "string",
                                        "value": "@{body('Parse_Message')?['SessionId']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Status": {
                            "runAfter": {
                                "Initialize_ErrorMessage": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Status",
                                        "type": "string",
                                        "value": "OK"
                                    }
                                ]
                            }
                        },
                        "Initialize_TenantId": {
                            "runAfter": {
                                "Initialize_SessionId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "TenantId",
                                        "type": "string",
                                        "value": "@body('Parse_Content')?['AzureTenantId']"
                                    }
                                ]
                            }
                        },
                        "Initialize_runId": {
                            "runAfter": {
                                "Parse_Workflow": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "runId",
                                        "type": "string",
                                        "value": "@body('Parse_Workflow')?['run']?['name']"
                                    }
                                ]
                            }
                        },
                        "Parse_Content": {
                            "runAfter": {
                                "Parse_Message": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@base64ToString(body('Parse_Message')?['ContentData'])",
                                "schema": {
                                    "properties": {
                                        "AzureApplicationId": {
                                            "type": "string"
                                        },
                                        "AzureApplicationSecret": {
                                            "type": "string"
                                        },
                                        "AzureTenantId": {
                                            "type": "string"
                                        },
                                        "BusinessEventId": {
                                            "type": "string"
                                        },
                                        "ControlNumber": {
                                            "type": "integer"
                                        },
                                        "D365EnvironmentURL": {
                                            "type": "string"
                                        },
                                        "DataManagementIntegrationUniqueId": {
                                            "type": "string"
                                        },
                                        "DataMigrationDirection": {
                                            "type": "string"
                                        },
                                        "DefinitionGroupName": {
                                            "type": "string"
                                        },
                                        "EventId": {
                                            "type": "string"
                                        },
                                        "EventTime": {
                                            "type": "string"
                                        },
                                        "ExternalSystem": {
                                            "type": "string"
                                        },
                                        "LegalEntity": {
                                            "type": "string"
                                        },
                                        "MajorVersion": {
                                            "type": "integer"
                                        },
                                        "MinorVersion": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Message": {
                            "runAfter": {
                                "Initialize_runId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "properties": {
                                        "ContentData": {
                                            "type": "string"
                                        },
                                        "ContentTransferEncoding": {
                                            "type": "string"
                                        },
                                        "ContentType": {
                                            "type": "string"
                                        },
                                        "CorrelationId": {},
                                        "Label": {},
                                        "LockToken": {
                                            "type": "string"
                                        },
                                        "MessageId": {
                                            "type": "string"
                                        },
                                        "Properties": {
                                            "properties": {
                                                "BusinessEventCategory": {
                                                    "type": "string"
                                                },
                                                "BusinessEventId": {
                                                    "type": "string"
                                                },
                                                "DeliveryCount": {
                                                    "type": "string"
                                                },
                                                "EnqueuedSequenceNumber": {
                                                    "type": "string"
                                                },
                                                "EnqueuedTimeUtc": {
                                                    "type": "string"
                                                },
                                                "EventId": {
                                                    "type": "string"
                                                },
                                                "ExpiresAtUtc": {
                                                    "type": "string"
                                                },
                                                "LegalEntity": {
                                                    "type": "string"
                                                },
                                                "LockToken": {
                                                    "type": "string"
                                                },
                                                "LockedUntilUtc": {
                                                    "type": "string"
                                                },
                                                "MessageId": {
                                                    "type": "string"
                                                },
                                                "ScheduledEnqueueTimeUtc": {
                                                    "type": "string"
                                                },
                                                "SequenceNumber": {
                                                    "type": "string"
                                                },
                                                "Size": {
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "type": "string"
                                                },
                                                "TimeToLive": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "ReplyTo": {},
                                        "ReplyToSessionId": {},
                                        "ScheduledEnqueueTimeUtc": {
                                            "type": "string"
                                        },
                                        "SequenceNumber": {
                                            "type": "integer"
                                        },
                                        "SessionId": {},
                                        "TimeToLive": {
                                            "type": "string"
                                        },
                                        "To": {}
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Workflow": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@workflow()",
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "run": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "tags": {
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('storageAccountName'))]",
                                "connectionName": "[variables('storageAccountName')]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('location'), 'azureblob')]"
                            },
                            "servicebus_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('servicebusName'))]",
                                "connectionName": "[variables('servicebusName')]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('location'), 'servicebus')]"
                            }
                        }
                    }
                },
                "state": "Enabled"
            },
            "type": "Microsoft.Logic/workflows"
        }
    ]
}